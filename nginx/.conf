upstream loadbalancer {
  server web1:5177;
  server web2:5177;
}

server {
  listen 80;
  server_name nycbiomechanics.com;  # Replace with your domain name

  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;

  # Add secure headers
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "DENY";
  add_header Content-Security-Policy "default-src 'self'";
}

server {
  listen 443 ssl;
  server_name nycbiomechanics.com;  # Replace with your domain name

  ssl_certificate /path/to/certificate.crt;  # Replace with your SSL certificate
  ssl_certificate_key /path/to/private.key;  # Replace with your SSL private key

  # Serve frontend content
  location / {
    proxy_pass http://loadbalancer;
  }
}


#### NO2

upstream loadbalancer {
  server web1:5177;
  server web2:5177;
}

server {
  listen 80;
  server_name example.com;  # Replace with your domain name

  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;

  # Add secure headers
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "DENY";
  add_header Content-Security-Policy "default-src 'self'";
}

server {
  listen 443 ssl;
  server_name example.com;  # Replace with your domain name

  ssl_certificate /path/to/certificate.crt;  # Replace with your SSL certificate
  ssl_certificate_key /path/to/private.key;  # Replace with your SSL private key

  # Proxy requests to the backend API
  location /api/ {
    proxy_pass http://localhost:5177;  # Replace with your backend server address and port
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # CORS configuration
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
      return 204;
    }
  }

  # Serve frontend content
  location / {
    proxy_pass http://loadbalancer;
  }
}



##NO1

upstream loadbalancer {
  server web1:5177;
  server web2:5177;
}

server {
  listen 80;
  server_name example.com;  # Replace with your domain name

  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;

  # Add secure headers
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "DENY";
  add_header Content-Security-Policy "default-src 'self'";

  # Allow CORS for all origins
  add_header 'Access-Control-Allow-Origin' '*';
  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
}

server {
  listen 443 ssl;
  server_name example.com;  # Replace with your domain name

  ssl_certificate /path/to/certificate.crt;  # Replace with your SSL certificate
  ssl_certificate_key /path/to/private.key;  # Replace with your SSL private key

  # Proxy requests to the backend API
  location /api/ {
    proxy_pass http://localhost:5177;  # Replace with your backend server address and port
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Allow CORS for specific origins
    add_header 'Access-Control-Allow-Origin' 'https://example.com';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
  }

  # Serve frontend content
  location / {
    proxy_pass http://loadbalancer;
  }
}




    caddy:
        image: caddy:latest
        build: ./functional-pattern-backend/caddy
        restart: unless-stopped
        container_name: caddy
        ports:
            -2929:2929
            - 80:80
            - 443:443
        networks:
            - nyc-biomechanics